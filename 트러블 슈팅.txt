7/3
1. 간단한 예제로 MVC 패턴 구성
2. MySQL 의존성 추가 후 연동

7/5
1. thymeleaf 의존성을 추가하자 static 폴더 내의 index.html 파일 인식 불가
    1-1. 해결: index.html 파일을 templates 폴더로 이동
    1-2. 의문: thymeleaf가 꼭 필요할까?
        1-2-1. thymeleaf를 사용하는 경우와 REST 기반으로 개발하는 경우의 장단점 비교하기
            
            thymeleaf의 장점
            -서버 사이드 렌더링(SSR) 방식이라 클라이언트 부담이 적음
            -검색엔진 최적화, 초기 로딩 시간 단축, 데이터의 동적 바인딩

            REST API의 장점
            -프론트에서 정제한 데이터를 서버에 요청하므로 서버 부담이 적음
            -프론트와 백엔드가 규정된 API를 통해 데이터를 주고받으므로 개발자간의 소통이 쉬움

        1-2-2. REST 기반으로 개발하기로 결정
            thymeleaf 의존성 제거 후 index.html 파일 원위치

            ***REST API 디자인 가이드***
                -URI는 정보의 자원을 표현해야 함
                -자원에 대한 행위는 HTTP Method(GET, POST, PUT, PATCH, DELETE)로 표현

                URI 설계 규칙
                    -URI는 소문자로만 구성
                    -URI는 명사만 사용하며, 행위는 Method로 표시
                    -슬래시로 계층 관계를 표현
                    -URI의 마지막 문자로 슬래시는 생략
                    -파일 확장자는 URI에서 제외
                    -URI에서 영어는 복수형으로 작성

2. 콘솔창에 hibernate.dialect 관련 warn이 뜸
    2-1. 보류: 콘솔창에서 권장하는대로 application.yml의 hibernate를 지우면 에러로 인해 실행이 불가능